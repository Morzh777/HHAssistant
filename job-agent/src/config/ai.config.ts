/* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call */

// Импортируем конфигурации из провайдеров
import {
  OPENAI_CONFIGS,
  OPENAI_BASE_URL,
} from '../ai/providers/openai.provider';
import {
  YANDEX_CONFIGS,
  YANDEX_BASE_URL,
} from '../ai/providers/yandex.provider';

// Выберите провайдера (меняйте здесь при необходимости)
export const DEFAULT_AI_PROVIDER = 'openai' as const; // 'openai' или 'yandex'

// Конфигурация активного провайдера
export const ACTIVE_PROVIDER_CONFIG =
  DEFAULT_AI_PROVIDER === 'openai' ? OPENAI_CONFIGS : YANDEX_CONFIGS;

export const ACTIVE_PROVIDER_URL =
  DEFAULT_AI_PROVIDER === 'openai' ? OPENAI_BASE_URL : YANDEX_BASE_URL;

// Системные промпты
export const SYSTEM_PROMPTS = {
  COVER_LETTER:
    'Ты пишешь короткие сопроводительные письма для российского рынка труда. Пиши как живой человек - естественно, но профессионально. Избегай шаблонов, формальностей и американских клише. НЕ упоминай зарплату, компенсацию или деньги - это неуместно. Фокусируйся на конкретных технологиях и опыте. Пиши в российском стиле. ВАЖНО: внимательно анализируй проекты из резюме и находи конкретные связи с требованиями вакансии. Упоминай релевантные проекты, которые показывают твой опыт в нужной области.',

  RESUME_ANALYSIS:
    'Ты эксперт по анализу резюме. Извлекай только факты из HTML, не добавляй ничего от себя. Отвечай только в формате JSON.',

  RESUME_TEXT_ANALYSIS:
    'Ты эксперт по анализу резюме. Извлекай только факты из текста, не добавляй ничего от себя. Отвечай только в формате JSON.',

  VACANCY_ANALYSIS:
    'Ты независимый и строгий эксперт по HR и рынку труда. Не сглаживай формулировки и не выгораживай работодателя. Явно выделяй неадекватные требования и риски. Отвечай только в формате JSON, без лишнего текста.',
} as const;

// Промпты для пользователя
export const USER_PROMPTS = {
  COVER_LETTER: (resumeData: any, vacancyData: any, vacancyAnalysis?: any) => `
Напиши короткое сопроводительное письмо на основе резюме и вакансии.

РЕЗЮМЕ:
${JSON.stringify(resumeData, null, 2)}

ВАКАНСИЯ:
${JSON.stringify(vacancyData, null, 2)}

${
  vacancyAnalysis
    ? `АНАЛИЗ ВАКАНСИИ (учти эту информацию при составлении письма):
- Рекомендация: ${vacancyAnalysis.recommendation}
- Уровень токсичности: ${vacancyAnalysis.toxicityScore}/10
- Красные флаги: ${Array.isArray(vacancyAnalysis.redFlags) ? vacancyAnalysis.redFlags.join(', ') : 'не обнаружены'}
- Плюсы: ${Array.isArray(vacancyAnalysis.positives) ? vacancyAnalysis.positives.join(', ') : 'не указаны'}
- Резюме анализа: ${vacancyAnalysis.summary}
- Адекватность зарплаты: ${vacancyAnalysis.salaryAdequacy}
- Соответствие опыту: ${vacancyAnalysis.experienceMatch}

ВАЖНО: 
- Если есть красные флаги - будь осторожнее в формулировках
- Если recommendation = "avoid" - можешь быть менее восторженным
- Если recommendation = "apply" - можешь проявить больше энтузиазма
- Используй информацию об адекватности условий для тона письма
`
    : ''
}

Правила:
- Начинай с "Здравствуйте! Заинтересовала ваша вакансия"
- Максимум 2 абзаца
- Пиши как живой человек - естественно и без формальностей
- ВАЖНО: внимательно изучи проекты из резюме и найди те, которые релевантны вакансии
- Упомяни конкретные технологии и проекты из резюме, которые соответствуют требованиям вакансии
- Покажи, что читал вакансию - упомяни название позиции, но НЕ название компании
- Свяжи свой опыт с требованиями вакансии через конкретные проекты
- Если в резюме есть проекты, похожие на задачи вакансии - обязательно упомяни их
- Используй живые фразы: "хочется", "интересно", "готов"
- Избегай: "выразить интерес", "отличная возможность", "профессиональный рост", "компенсация", "заработная плата"
- НЕ упоминай названия компаний/проектов - пиши про технологии и задачи
- НЕ пиши про зарплату, деньги, компенсацию - это неуместно в сопроводительном письме
- Пиши от первого лица
- Закончи естественно, без "С уважением"
- НЕ придумывай лишние детали
- Пиши в российском стиле - без американских клише

Пример стиля:
"Здравствуйте! Заинтересовала ваша вакансия Node.js-разработчика — у меня есть реальные проекты на Node.js и TypeScript. Строил микросервисный бэкенд на NestJS с PostgreSQL, делал gRPC-интеграции и AI-классификацию, писал Telegram-бота с оплатами и API Gateway. Хочется применять эти технологии в новых проектах."

Пример анализа проектов:
Если вакансия про фронтенд на React, а в резюме есть проект "Конструктор резюме на Next.js" - упомяни: "делал интерфейсы на Next.js/React, включая конструктор резюме с адаптивной версткой"
Если вакансия про Chrome Extensions, а в резюме есть "Chrome Extension для сбора данных" - упомяни: "разрабатывал Chrome Extension с интеграцией Chrome APIs"

Дополнительные примеры российского стиля:
- "Интересно поработать с вашей командой над проектами на React"
- "Готов обсудить детали и рассказать о своем опыте"
- "Хочется развиваться в направлении фронтенд-разработки"
- "Готов приступить к работе и показать результат"

Ответ: только текст письма.
`,

  RESUME_ANALYSIS_HTML: (html: string) => `
Проанализируй HTML код резюме с сайта hh.ru и извлеки структурированную информацию в JSON формате.

ВАЖНО: Обязательно найди и включи ВСЕ секции резюме: Опыт работы, Навыки, Образование, О себе, Повышение квалификации/курсы, Тесты и экзамены, Сертификаты.

Верни JSON объект со следующей структурой:
{
  "personalInfo": {
    "fullName": "ФИО",
    "email": "email",
    "phone": "телефон",
    "location": "местоположение"
  },
  "position": "желаемая должность",
  "about": "краткое описание о себе",
  "experience": [
    {
      "company": "название компании",
      "position": "должность",
      "period": "период работы",
      "description": "описание обязанностей"
    }
  ],
  "education": [
    {
      "institution": "учебное заведение",
      "degree": "степень/специальность",
      "period": "период обучения"
    }
  ],
  "skills": [
    {
      "name": "название навыка",
      "level": "уровень (если указан)",
      "verified": "подтвержден ли навык"
    }
  ],
  "languages": [
    {
      "language": "язык",
      "level": "уровень владения"
    }
  ],
  "courses": [
    {
      "name": "название курса",
      "institution": "учреждение",
      "period": "период прохождения",
      "description": "описание курса"
    }
  ],
  "tests": [
    {
      "name": "название теста/экзамена",
      "score": "результат",
      "period": "период прохождения",
      "description": "описание"
    }
  ],
  "certificates": [
    {
      "name": "название сертификата",
      "issuer": "выдающая организация",
      "period": "период получения",
      "description": "описание"
    }
  ],
  "additionalInfo": {
    "projects": [],
    "other": "другая информация"
  }
}

HTML код резюме:
${html}
`,

  RESUME_ANALYSIS_TEXT: (text: string) => `
Проанализируй текст резюме с сайта hh.ru и извлеки структурированную информацию в JSON формате.

ВАЖНО: Внимательно найди и включи ВСЕ секции резюме:
- Опыт работы (места работы, должности, периоды, описания)
- Навыки (технологии, языки программирования, инструменты)
- Образование (учебные заведения, специальности, годы)
- О себе (краткое описание кандидата, его цели, особенности)
- Повышение квалификации/курсы (дополнительное обучение, курсы)
- Тесты и экзамены (пройденные тесты, результаты)
- Сертификаты (полученные сертификаты, дипломы)

Если какая-то секция отсутствует в резюме, оставь соответствующий массив пустым [].

Верни JSON объект со следующей структурой:
{
  "personalInfo": {
    "fullName": "ФИО",
    "email": "email",
    "phone": "телефон",
    "location": "местоположение"
  },
  "position": "желаемая должность",
  "about": "краткое описание о себе (если есть)",
  "experience": [
    {
      "company": "название компании",
      "position": "должность",
      "period": "период работы",
      "description": "описание обязанностей"
    }
  ],
  "education": [
    {
      "institution": "учебное заведение",
      "degree": "степень/специальность",
      "period": "период обучения"
    }
  ],
  "skills": [
    {
      "name": "название навыка",
      "level": "уровень (если указан)",
      "verified": "подтвержден ли навык"
    }
  ],
  "languages": [
    {
      "language": "язык",
      "level": "уровень владения"
    }
  ],
  "courses": [
    {
      "name": "название курса",
      "institution": "учреждение",
      "period": "период прохождения",
      "description": "описание курса"
    }
  ],
  "tests": [
    {
      "name": "название теста/экзамена",
      "score": "результат",
      "period": "период прохождения",
      "description": "описание"
    }
  ],
  "certificates": [
    {
      "name": "название сертификата",
      "issuer": "выдающая организация",
      "period": "период получения",
      "description": "описание"
    }
  ],
  "additionalInfo": {
    "projects": [],
    "other": "другая информация"
  }
}

Текст резюме:
${text}
`,

  VACANCY_ANALYSIS: (vacancyData: any, resumeData?: any) => `
Проанализируй вакансию на токсичность, красные флаги и адекватность работодателя. Не выгораживай вакансию — если требования завышены или условия сомнительные, фиксируй это прямо.

ДАННЫЕ ВАКАНСИИ:
${JSON.stringify(vacancyData, null, 2)}

${resumeData ? `ДАННЫЕ РЕЗЮМЕ КАНДИДАТА (используй, чтобы оценить соответствие и дать персональную рекомендацию):\n${JSON.stringify(resumeData, null, 2)}\n` : ''}

Проверь следующие аспекты:

🚩 КРАСНЫЕ ФЛАГИ (фиксируй чётко, без смягчений):
- Неоплачиваемое тестовое задание или тест > 2 часов (особенно > 4 часов)
- Требование указывать желаемую зарплату прямо в отклике
- Несоответствие грейду: "Junior", но просят 1–3 года коммерческого опыта
- Завышенные требования для джуниора (например, реверс-инжиниринг, поиск скрытых API)
- Частичная ставка с расплывчатым обещанием перевода на фулл-тайм через N месяцев
- Размытые обязанности ("всё и сразу")
- Токсичные формулировки

✅ ПЛЮСЫ:
- Чёткие требования и понятный стек
- Наставник, код-ревью, обучение
- Прозрачные условия (официальное оформление, соцпакет, удалёнка)
- Возможности роста, адекватная нагрузка, оплата переработок

📊 ПРАВИЛА ОЦЕНКИ (будь строгим):
- Базовая токсичность: 3
- +2 если тестовое > 2 часов, +3 если указано до 4 часов и нет явной оплаты
- +1 за требование указывать ЗП в отклике
- +2 за завышенные требования/несоответствие грейду ("1–3 года" для Junior, реверс-инжиниринг и т.п.)
- +1 за частичную ставку с обещаниями на фулл без конкретики
- Ограничь итог в диапазоне 1–10

🧭 РЕКОМЕНДАЦИЯ:
- Если есть ≥2 сильных флагов (например, неоплаченное ТЗ > 2ч и несоответствие грейду) — минимум "caution"
- Если флаги существенные и перевешивают плюсы — допускается "avoid"
- Если флагов мало и условия прозрачные — "apply"

Верни результат в JSON формате:
{
  "toxicityScore": число от 1 до 10,
  "recommendation": "apply" | "avoid" | "caution",
  "redFlags": ["список красных флагов"],
  "positives": ["список плюсов"],
  "summary": "краткое резюме на русском (прямо и честно, без смягчений)",
  "salaryAdequacy": "adequate" | "low" | "high" | "not_specified",
  "experienceMatch": "junior_friendly" | "requires_experience" | "unrealistic"
}`,
} as const;

// Регулярные выражения
export const REGEX_PATTERNS = {
  RESUME_ID: /\/resume\/([a-f0-9]+)/,
} as const;

// Константы
export const CONSTANTS = {
  UNKNOWN_VALUE: 'unknown',
  NOT_SPECIFIED: 'Не указано',
  NOT_SPECIFIED_SALARY: 'Не указана',
  DATE_FORMAT: 'YYYY-MM-DD',
} as const;
